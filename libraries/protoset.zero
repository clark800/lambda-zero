#* protoset.zero

ProtosetType(a) ::= {
    Protoset(_compare : (a => a => 𝔹), _data : BinaryTree(AADatumType(a)))
}

newProtoset((~<), elements) := Protoset((~<), extendAA((~<), elements, Leaf))

Protoset(_, data).getElements := flattenAA(data)

Protoset(_, data).cardinality := length(flattenAA(data))

Protoset((~<), data).elicit(object) := searchAA((~<), object, data)

object in protoset := not isVoid(protoset.elicit(object))

Protoset((~<), data).add(object) := Protoset((~<), insertAA((~<), object, data))

Protoset((~<), data) U Protoset(_, data') :=
    Protoset((~<), mergeAA((~<), data, data'))

#*
