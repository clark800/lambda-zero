#* table.zero

newTable((=<), entries) := newProtoset((=<).on(first), entries)
lookup(table, key) := table.elicit((key, undefined)).mapRight(second)
hasKey(table, key) := (key, undefined) : table
get(table, key, default) := table.lookup(key) ? default
delete(table, key) := table.remove((key, undefined))
insert(table, key, value) := table.delete(key).add((key, value))
getKeys(table) := table.getElements.map(first)
getValues(table) := table.getElements.map(second)
mapKeys(table, f) := table.mapElements((key, value) -> (f(key), value))
mapValues(table, f) := table.mapElements((key, value) -> (key, f(value)))

newDictionary := newTable((<*=))
newRegistry(items) := newTable((<=), zip(naturals, items))
register(registry, item) :=
    (cardinality(registry), registry.insert(cardinality(registry), item))

#*
