#* type.zero

Type ::= {
    FreeType,
    TypeVariable(_ : Tag, _address : ℕ),
    FunctionType(_ : Tag, _parameterType : Type, _bodyType : Type),
    ADT(_ : Tag, _parameterTypes : List(Type), _count : ℕ, _index : ℕ)
}

define getTypeTag
    FreeType -> Tag("_", NOFIX, Location("", 0, 0))
    TypeVariable(tag, _) -> tag
    FunctionType(tag, _, _) -> tag
    ADT(tag, _, _, _) -> tag

Scheme ::= {Scheme(getUniversals : List(Type), getType : Type)}

Free := Scheme([], FreeType)

#*
