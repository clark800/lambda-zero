#* type.zero

# note: types contain source terms so that we have the ability to serialize the
# whole source term if there is a type error
Type ::= {
    FreeType,
    BottomType(_source : Term),
    TypeVariable(_source : Term, getTypeVariableIndex : Natural),
    FunctionType(_source : Term, getParameterType : Type, getBodyType : Type),
    ADT(_source : Term, getName : List(Natural), getParameters : List(Type),
        getCount : Natural, getIndex : Natural)
}

TypeScheme ::= {Scheme(getUniversals : List(Type), getType : Type)}

Free := Scheme([], FreeType)

#*
