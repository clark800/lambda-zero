#* declarations.zero

define builtinTypes
    syntax(>->) := infixR(10)
    (>->) := FunctionType(noTerm)
    bottom := BottomType(noTerm)
    boolean := BooleanType(noTerm)
    natural := NaturalType(noTerm)
    arithmetic := natural >-> natural >-> natural
    comparison := natural >-> natural >-> boolean
    newDictionary([
        ("+", arithmetic),
        ("-", arithmetic),
        ("*", arithmetic),
        ("//", arithmetic),
        ("%", arithmetic),
        ("=", comparison),
        ("=/=", comparison),
        ("<", comparison),
        (">", comparison),
        ("<=", comparison),
        (">=", comparison),
        ("up", natural >-> natural),
        ("(undefined)", bottom)
    ])

define getBuiltinType(term)
    builtinTypes.get(getTagLexeme(getTermTag(term)), undefined).setSource(term)

#*
