--* definitions.zero

define getDefinitionName(definition)
    getParameter(getLeft(definition))

define getDefinitionValue(definition)
    getRight(definition)

define getDefinitionScope(definition)
    getBody(getLeft(definition))

define isDefinitionNode(node)
    isApplication(node) and isLambda(getLeft(node)) and
    (isThisLexeme(node, "define") or
     isThisLexeme(node, ":=") or isThisLexeme(node, "≔") or
     isThisLexeme(node, "::=") or isThisLexeme(node, "⩴"))

define getDefinitions(node)
    if isApplication(node) and isIdentity(getLeft(node))
        getDefinitions(getRight(node))
    if not isDefinitionNode(node)
        []
    (getDefinitionName(node), getDefinitionValue(node)) ::
        getDefinitions(getDefinitionScope(node))

--*
