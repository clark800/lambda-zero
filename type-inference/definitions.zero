#* definitions.zero

define getDefinitions
    case Variable(_, _) -> []
    case Abstraction(_, _) -> []
    case Application(_, applicand, argument)
        if not isAbstraction(applicand) then []
        (getTermTag(applicand), argument) :: getDefinitions(getBody(applicand))
    case Numeral(_, _) -> []
    case Operation(_, _, _) -> []


define showDefinition((tag, value))
    showTag(tag) ++ " := " ++ showTerm(value)


define showDefinitions(definitions)
    definitions.map(showDefinition.joinWith("\n"))

#*
